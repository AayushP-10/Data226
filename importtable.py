# -*- coding: utf-8 -*-
"""ImportTable.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hz7hpOxUSqUeNzUroA2_Sd9vC6ACXYuv
"""

from datetime import datetime, timedelta
from airflow import DAG
from airflow.providers.snowflake.operators.snowflake import SnowflakeOperator
from airflow.operators.python import PythonOperator

# Define default arguments for the DAG
default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2024, 1, 1),
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# Create the DAG
dag = DAG(
    'snowflake_table_import',
    default_args=default_args,
    description='Import tables into Snowflake from S3',
    schedule_interval='@daily',
    catchup=False
)

# SQL commands
create_tables_sql = """
CREATE TABLE IF NOT EXISTS DEV.RAW_DATA.user_session_channel (
    userId int not NULL,
    sessionId varchar(32) primary key,
    channel varchar(32) default 'direct'
);

CREATE TABLE IF NOT EXISTS DEV.RAW_DATA.session_timestamp (
    sessionId varchar(32) primary key,
    ts timestamp
);
"""

create_stage_sql = """
CREATE OR REPLACE STAGE DEV.RAW_DATA.blob_stage
    url = 's3://s3-geospatial/readonly/'
    file_format = (type = csv, skip_header = 1, field_optionally_enclosed_by = '"');
"""

copy_user_session_sql = """
COPY INTO DEV.RAW_DATA.user_session_channel
FROM @DEV.RAW_DATA.blob_stage/user_session_channel.csv;
"""

copy_session_timestamp_sql = """
COPY INTO DEV.RAW_DATA.session_timestamp
FROM @DEV.RAW_DATA.blob_stage/session_timestamp.csv;
"""

# Create tasks
create_tables = SnowflakeOperator(
    task_id='create_tables',
    sql=create_tables_sql,
    snowflake_conn_id='snowflake_conn',
    dag=dag
)

create_stage = SnowflakeOperator(
    task_id='create_stage',
    sql=create_stage_sql,
    snowflake_conn_id='snowflake_conn',
    dag=dag
)

copy_user_session = SnowflakeOperator(
    task_id='copy_user_session',
    sql=copy_user_session_sql,
    snowflake_conn_id='snowflake_conn',
    dag=dag
)

copy_session_timestamp = SnowflakeOperator(
    task_id='copy_session_timestamp',
    sql=copy_session_timestamp_sql,
    snowflake_conn_id='snowflake_conn',
    dag=dag
)

# Define task dependencies
create_tables >> create_stage >> [copy_user_session, copy_session_timestamp]